{
  "version": "1.0",
  "conceptualSchemaSettings": {},
  "queries": [
    {
      "name": "dMetricSystem",
      "lineageTag": "8bd251fb-eb01-4896-86e7-8540caece494",
      "queryGroupId": "65b26c0a-696f-4291-a301-00e87b035f01",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45W8swrSS3KSyzJzM9LzFEoriwuSc1VitUBSuQWpBZlIonFAgA=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Metric System\" = _t]),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Metric System\", type text}})",
        "in",
        "    #\"Changed Type\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\\\"i45W8swrSS3KSyzJzM9LzFEoriwuSc1VitUBSuQWpBZlIonFAgA=\\\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\\\"Metric System\\\" = _t]),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(Source,{{\\\"Metric System\\\", type text}})\\nin\\n    #\\\"Changed Type\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "dMetrics",
      "lineageTag": "92283c49-0c4d-4746-854f-9b05a6273ecf",
      "queryGroupId": "65b26c0a-696f-4291-a301-00e87b035f01",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Excel.Workbook(File.Contents(PathToData&\"\\metrics_metadata.xlsx\"), null, true),",
        "    Tabelle1_Sheet = Source{[Item=\"Tabelle1\",Kind=\"Sheet\"]}[Data],",
        "    #\"Promoted Headers\" = Table.PromoteHeaders(Tabelle1_Sheet, [PromoteAllScalars=true]),",
        "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Attribute\", type text}, {\"Alias\", type text}, {\"Description\", type text}, {\"Source\", type text}, {\"Link\", type text}, {\"Parameter name\", type text}})",
        "in",
        "    #\"Changed Type1\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = PowerPlatform.Dataflows(null),\\n    Workspaces = Source{[Id=\\\"Workspaces\\\"]}[Data],\\n    #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\" = Workspaces{[workspaceId=\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"]}[Data],\\n    #\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\" = #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"{[dataflowId=\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\"]}[Data],\\n    dMetrics_ = #\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\"{[entity=\\\"dMetrics\\\",version=\\\"\\\"]}[Data]\\nin\\n    dMetrics_\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "dCountries",
      "lineageTag": "79a7641b-6474-4e48-831c-d7d94faf95e9",
      "queryGroupId": "65b26c0a-696f-4291-a301-00e87b035f01",
      "navigationStepName": "Navigation",
      "refreshWhenRefreshingAll": false,
      "text": [
        "let",
        "  Source = Excel.Workbook(File.Contents(PathToData & \"\\countries.xlsx\"), null, true), ",
        "  countries_Sheet = Source{[Item = \"countries\", Kind = \"Sheet\"]}[Data], ",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(countries_Sheet, [PromoteAllScalars = true]), ",
        "  #\"Changed Type\" = Table.TransformColumnTypes(",
        "    #\"Promoted Headers\", ",
        "    {",
        "      {\"ISO\", type text}, ",
        "      {\"ISO3\", type text}, ",
        "      {\"ISO-Numeric\", Int64.Type}, ",
        "      {\"fips\", type text}, ",
        "      {\"Country\", type text}, ",
        "      {\"Capital\", type text}, ",
        "      {\"Area(in sq km)\", Int64.Type}, ",
        "      {\"Population\", Int64.Type}, ",
        "      {\"ContinentAbreviation\", type text}, ",
        "      {\"tld\", type text}, ",
        "      {\"CurrencyCode\", type text}, ",
        "      {\"CurrencyName\", type text}, ",
        "      {\"Phone\", type text}, ",
        "      {\"Postal Code Format\", type text}, ",
        "      {\"Postal Code Regex\", type text}, ",
        "      {\"Languages\", type text}, ",
        "      {\"geonameid\", Int64.Type}, ",
        "      {\"neighbours\", type text}, ",
        "      {\"EquivalentFipsCode\", type text}",
        "    }",
        "  ), ",
        "  #\"Added ContinentName\" = Table.AddColumn(",
        "    #\"Changed Type\", ",
        "    \"ContinentName\", ",
        "    each Switch(",
        "      {",
        "        [ContinentAbreviation], ",
        "        \"EU\", \"Europe\", ",
        "        \"NA\", \"North America\", ",
        "        \"SA\", \"South America\", ",
        "        \"OC\", \"Oceania\", ",
        "        \"AF\", \"Africa\", ",
        "        \"AS\", \"Asia\", ",
        "        \"AN\", \"Antartica\"",
        "      }",
        "    ), ",
        "    type text",
        "  )",
        "in",
        "  #\"Added ContinentName\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = PowerPlatform.Dataflows(null),\\n    Workspaces = Source{[Id=\\\"Workspaces\\\"]}[Data],\\n    #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\" = Workspaces{[workspaceId=\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"]}[Data],\\n    #\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\" = #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"{[dataflowId=\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\"]}[Data],\\n    dCountries_ = #\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\"{[entity=\\\"dCountries\\\",version=\\\"\\\"]}[Data],\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(dCountries_,{{\\\"Continent\\\", \\\"Continent\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "dCities",
      "lineageTag": "ccb7bde8-a249-4d43-a02b-2c1cdba50e95",
      "queryGroupId": "65b26c0a-696f-4291-a301-00e87b035f01",
      "navigationStepName": "Navigation",
      "refreshWhenRefreshingAll": false,
      "text": [
        "let",
        "    Source = Excel.Workbook(File.Contents(PathToData&\"\\major_cities.xlsx\"), null, true),",
        "    cities_Sheet = Source{[Item=\"cities\",Kind=\"Sheet\"]}[Data],",
        "    #\"Promoted Headers\" = Table.PromoteHeaders(cities_Sheet, [PromoteAllScalars=true]),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"name\", type text}, {\"asciiname\", type text}, {\"lat\", type number}, {\"lon\", type number}, {\"class\", type text}, {\"country_code\", type text}, {\"pop\", Int64.Type}, {\"elevation\", Int64.Type}, {\"timezone\", type text}, {\"ID\", Int64.Type}})",
        "in",
        "    #\"Changed Type\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = PowerPlatform.Dataflows(null),\\n    Workspaces = Source{[Id=\\\"Workspaces\\\"]}[Data],\\n    #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\" = Workspaces{[workspaceId=\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"]}[Data],\\n    #\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\" = #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"{[dataflowId=\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\"]}[Data],\\n    dCities_ = #\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\"{[entity=\\\"dCities\\\",version=\\\"\\\"]}[Data]\\nin\\n    dCities_\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "factBirthsDeaths",
      "lineageTag": "cfeefc50-eedb-4aef-9650-bf325106a155",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\births-and-deaths-projected-to-2100.csv\"), [Delimiter = \",\", Columns = 7, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Extracted Text Before Delimiter\" = Table.TransformColumns(#\"Promoted Headers\", {{\"Deaths - Sex: all - Age: all - Variant: estimates\", each Text.BeforeDelimiter(_, \".\"), type text}, {\"Births - Sex: all - Age: all - Variant: estimates\", each Text.BeforeDelimiter(_, \".\"), type text}}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Extracted Text Before Delimiter\",{{\"Entity\", type text}, {\"Code\", type text}, {\"Year\", Int64.Type}, {\"Deaths - Sex: all - Age: all - Variant: estimates\", type number}, {\"Deaths - Sex: all - Age: all - Variant: medium\", type number}, {\"Births - Sex: all - Age: all - Variant: estimates\", type number}, {\"Births - Sex: all - Age: all - Variant: medium\", type number}}),",
        "    #\"Filtered only past\" = Table.SelectRows(#\"Changed Type\", each ([#\"Deaths - Sex: all - Age: all - Variant: estimates\"] <> null and [#\"Deaths - Sex: all - Age: all - Variant: estimates\"] <> \"\")),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered only past\",{{\"Deaths - Sex: all - Age: all - Variant: estimates\", \"Deaths\"}, {\"Births - Sex: all - Age: all - Variant: estimates\", \"Births\"}}),",
        "    #\"Filtered blanks on ISO\" = Table.SelectRows(#\"Renamed Columns\", each ([Code] <> \"\")),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered blanks on ISO\",{\"Entity\", \"Code\", \"Year\", \"Deaths\", \"Births\"}),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Removed Other Columns\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\")",
        "in",
        "    #\"Unpivoted Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factCarbonIntensityElectricity",
      "lineageTag": "2ea2a37b-cffc-4c4d-9b01-f8e07538ff37",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\carbon-intensity-electricity.csv\"), [Delimiter = \",\", Columns = 4, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"Carbon intensity of electricity (gCO2/kWh)\"}),",
        "    #\"Filtered blanks on ISO\" = Table.SelectRows(#\"Removed Other Columns\", each ([Code] <> \"\")),",
        "    #\"Changed Type with Locale\" = Table.TransformColumnTypes(#\"Filtered blanks on ISO\", {{\"Carbon intensity of electricity (gCO2/kWh)\", type number}}, \"en-US\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Changed Type with Locale\",{{\"Year\", Int64.Type}}),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Changed Type\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\")",
        "in",
        "    #\"Unpivoted Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factFreedomOfExpressionIndex",
      "lineageTag": "d0e63437-d9cb-4257-8326-0a60a2bb605d",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\freedom-of-expression-index.csv\"), [Delimiter = \",\", Columns = 6, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"freeexpr_vdem_owid\", \"freeexpr_vdem_high_owid\", \"freeexpr_vdem_low_owid\"}),",
        "    #\"Changed Type with Locale\" = Table.TransformColumnTypes(#\"Removed Other Columns\", {{\"freeexpr_vdem_owid\", type number}, {\"freeexpr_vdem_high_owid\", type number}, {\"freeexpr_vdem_low_owid\", type number}}, \"en-US\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Changed Type with Locale\",{{\"Year\", Int64.Type}}),",
        "    #\"Filtered blanks on ISO\" = Table.SelectRows(#\"Changed Type\", each [Code] <> null and [Code] <> \"\"),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Filtered blanks on ISO\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\")",
        "in",
        "    #\"Unpivoted Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factGDP",
      "lineageTag": "3db46cc7-4587-4d21-99ea-4695c857dc6e",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\gdp.csv\"), [Delimiter = \",\", Columns = 4, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"GDP (constant 2015 US$)\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"GDP (constant 2015 US$)\", type number}, {\"Year\", Int64.Type}}),",
        "    #\"Filtered blanks on ISO\" = Table.SelectRows(#\"Changed Type\", each [Code] <> null and [Code] <> \"\"),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Filtered blanks on ISO\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\")",
        "in",
        "    #\"Unpivoted Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factGDPperCapita",
      "lineageTag": "3deb0b0d-2923-4aa4-bdab-89c1ad73c014",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\gdp-per-capita.csv\"), [Delimiter = \",\", Columns = 5, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"GDP per capita\"}),",
        "    #\"Changed Type with Locale\" = Table.TransformColumnTypes(#\"Removed Other Columns\", {{\"GDP per capita\", type number}}, \"en-US\"),",
        "    #\"Filtered blanks on ISO\" = Table.SelectRows(#\"Changed Type with Locale\", each [Code] <> null and [Code] <> \"\"),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Filtered blanks on ISO\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Columns\",{{\"Year\", Int64.Type}})",
        "in",
        "    #\"Changed Type\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factHDI",
      "lineageTag": "2ed8970f-cbaa-4332-80c8-38bfa43c27c9",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\human-development-index.csv\"), [Delimiter = \",\", Columns = 4, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"Human Development Index\"}),",
        "    #\"Filtered blanks on ISO\" = Table.SelectRows(#\"Removed Other Columns\", each [Code] <> null and [Code] <> \"\"),",
        "    #\"Changed Type with Locale\" = Table.TransformColumnTypes(#\"Filtered blanks on ISO\", {{\"Human Development Index\", type number}}, \"en-US\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Changed Type with Locale\",{{\"Year\", Int64.Type}}),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Changed Type\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\")",
        "in",
        "    #\"Unpivoted Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factMerchandiseExportsGdp",
      "lineageTag": "2068a30a-3669-4452-9746-1fb28cc35095",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\merchandise-exports-gdp-cepii.csv\"), [Delimiter = \",\", Columns = 4, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"Value of global merchandise exports as a share of GDP (Fouquin and Hugot; CEPII 2016; National data)\"}),",
        "    #\"Filtered blanks on ISO\" = Table.SelectRows(#\"Removed Other Columns\", each [Code] <> null and [Code] <> \"\"),",
        "    #\"Changed Type with Locale\" = Table.TransformColumnTypes(#\"Filtered blanks on ISO\", {{\"Value of global merchandise exports as a share of GDP (Fouquin and Hugot; CEPII 2016; National data)\", type number}}, \"en-US\"),",
        "    #\"Added % col\" = Table.AddColumn(#\"Changed Type with Locale\", \"Value of global merchandise exports as a share of GDP\", each [#\"Value of global merchandise exports as a share of GDP (Fouquin and Hugot; CEPII 2016; National data)\"]/100, type number),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added % col\",{\"Value of global merchandise exports as a share of GDP (Fouquin and Hugot; CEPII 2016; National data)\"}),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Removed Columns\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Columns\",{{\"Year\", Int64.Type}})",
        "in",
        "    #\"Changed Type\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factPopulation",
      "lineageTag": "1028f7cf-ba7b-4898-8949-21cd42886f8f",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\population.csv\"), [Delimiter = \",\", Columns = 4, QuoteStyle = QuoteStyle.None]),",
        "   #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"Population (historical estimates)\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"Population (historical estimates)\", \"Population\"}}),",
        "    #\"Filtered blanks on ISO\" = Table.SelectRows(#\"Renamed Columns\", each [Code] <> null and [Code] <> \"\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Filtered blanks on ISO\",{{\"Population\", Int64.Type}, {\"Year\", Int64.Type}}),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Changed Type\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\")",
        "in",
        "    #\"Unpivoted Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factLifeExpectancy",
      "lineageTag": "6a74860e-f691-4f0d-ab51-784c6ff82916",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\life-expectancy.csv\"), [Delimiter = \",\", Columns = 4, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"Life expectancy at birth (historical)\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"Year\", Int64.Type}}),",
        "    #\"Changed Type with Locale\" = Table.TransformColumnTypes(#\"Changed Type\", {{\"Life expectancy at birth (historical)\", type number}}, \"en-US\"),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type with Locale\",{{\"Life expectancy at birth (historical)\", \"Life expectancy at birth\"}}),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Renamed Columns\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\"),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Unpivoted Columns\", each [Code] <> null and [Code] <> \"\")",
        "in",
        "    #\"Filtered Rows\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factExpectedYearsSchooling",
      "lineageTag": "795dcaaa-ed68-4292-95e7-3884e9a90abc",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\expected-years-of-schooling.csv\"), [Delimiter = \",\", Columns = 4, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"Expected Years of Schooling\"}),",
        "    #\"Changed Type with Locale\" = Table.TransformColumnTypes(#\"Removed Other Columns\", {{\"Expected Years of Schooling\", type number}}, \"en-US\"),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Changed Type with Locale\",{{\"Year\", Int64.Type}}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each [Code] <> null and [Code] <> \"\"),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"Expected Years of Schooling\", \"Expected years of schooling\"}}),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Renamed Columns\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Value\")",
        "in",
        "    #\"Unpivoted Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factGNI",
      "lineageTag": "4e43e820-093a-4051-8b81-b667388a928d",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = Csv.Document(File.Contents(PathToData&\"\\world-banks-income-groups.csv\"), [Delimiter = \",\", Columns = 4, QuoteStyle = QuoteStyle.None]),",
        "  #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Promoted Headers\",{\"Entity\", \"Code\", \"Year\", \"Income classifications (World Bank (2021))\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"Income classifications (World Bank (2021))\", \"Gross national income\"}}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Year\", Int64.Type}}),",
        "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Changed Type\", {\"Entity\", \"Code\", \"Year\"}, \"Attribute\", \"Class\"),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Unpivoted Columns\", each [Code] <> null and [Code] <> \"\")",
        "in",
        "    #\"Filtered Rows\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "factForecast",
      "lineageTag": "912d1b37-c7b5-4a9a-a3d9-ac691a5c0bed",
      "queryGroupId": "70d3ac90-b51c-4cfb-bd18-ba3f1788e92f",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "  Source = dCities,",
        "  #\"Kept only city col\" = Table.SelectColumns(Source, {\"name\", \"ID\"}),",
        "  #\"Added API Forecast call\" = Table.AddColumn(#\"Kept only city col\", \"APicall\", each Json.Document(",
        "    Web.Contents(",
        "        \"http://api.weatherapi.com\",[RelativePath=\"v1/forecast.json?\", Query=[",
        "                    key=#\"API Key\",",
        "                    days=\"10\",",
        "                    aqi=\"no\",",
        "                    q=[name]",
        "                    ]]))),",
        "  #\"Removed Errors\" = Table.RemoveRowsWithErrors(#\"Added API Forecast call\", {\"APicall\"}),",
        "  #\"Expanded APicall\" = Table.ExpandRecordColumn(#\"Removed Errors\", \"APicall\", {\"forecast\"}, {\"forecast\"}),",
        "  #\"Expanded forecast\" = Table.ExpandRecordColumn(#\"Expanded APicall\", \"forecast\", {\"forecastday\"}, {\"forecastday\"}),",
        "  #\"Expanded forecastday\" = Table.ExpandListColumn(#\"Expanded forecast\", \"forecastday\"),",
        "  #\"Expanded forecastday1\" = Table.ExpandRecordColumn(#\"Expanded forecastday\", \"forecastday\", {\"hour\"}, {\"hour\"}),",
        "  #\"Expanded hour\" = Table.ExpandListColumn(#\"Expanded forecastday1\", \"hour\"),",
        "  #\"Expanded hour1\" = Table.ExpandRecordColumn(#\"Expanded hour\", \"hour\", {\"time\", \"temp_c\", \"temp_f\", \"condition\", \"wind_mph\", \"wind_kph\", \"wind_degree\", \"wind_dir\", \"pressure_mb\", \"pressure_in\", \"precip_mm\", \"precip_in\", \"humidity\", \"cloud\", \"feelslike_c\", \"feelslike_f\", \"windchill_c\", \"windchill_f\", \"chance_of_rain\", \"chance_of_snow\", \"uv\"}, {\"time\", \"temp_c\", \"temp_f\", \"condition\", \"wind_mph\", \"wind_kph\", \"wind_degree\", \"wind_dir\", \"pressure_mb\", \"pressure_in\", \"precip_mm\", \"precip_in\", \"humidity\", \"cloud\", \"feelslike_c\", \"feelslike_f\", \"windchill_c\", \"windchill_f\", \"chance_of_rain\", \"chance_of_snow\", \"uv\"}),",
        "  #\"Expanded condition\" = Table.ExpandRecordColumn(#\"Expanded hour1\", \"condition\", {\"text\", \"icon\"}, {\"text\", \"icon\"}),",
        "  #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded condition\", {{\"temp_f\", type number}, {\"temp_c\", type number}, {\"wind_mph\", type number}, {\"wind_kph\", type number}, {\"pressure_in\", type number}, {\"precip_mm\", type number}, {\"precip_in\", type number}, {\"feelslike_c\", type number}, {\"feelslike_f\", type number}, {\"windchill_c\", type number}, {\"windchill_f\", type number}, {\"time\", type datetime}, {\"text\", type text}, {\"icon\", type text}, {\"wind_dir\", type text}, {\"wind_degree\", Int64.Type}, {\"pressure_mb\", Int64.Type}, {\"humidity\", Int64.Type}, {\"cloud\", Int64.Type}, {\"chance_of_rain\", Int64.Type}, {\"chance_of_snow\", Int64.Type}}),",
        "  #\"Added Cond. Icon url\" = Table.AddColumn(#\"Changed Type\", \"ConditionIcon\", each \"https:\" & [icon], type text),",
        "  #\"Removed Columns\" = Table.RemoveColumns(#\"Added Cond. Icon url\", {\"icon\"}),",
        "  #\"Transform columns\" = Table.TransformColumnTypes(#\"Removed Columns\", {{\"uv\", type text}}),",
        "  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"uv\", null}})",
        "in",
        "  #\"Replace errors\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = PowerPlatform.Dataflows(null),\\n    Workspaces = Source{[Id=\\\"Workspaces\\\"]}[Data],\\n    #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\" = Workspaces{[workspaceId=\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"]}[Data],\\n    #\\\"1fbcaa61-d1bc-4f1d-93fe-422731f2e3eb\\\" = #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"{[dataflowId=\\\"1fbcaa61-d1bc-4f1d-93fe-422731f2e3eb\\\"]}[Data],\\n    factForecast_ = #\\\"1fbcaa61-d1bc-4f1d-93fe-422731f2e3eb\\\"{[entity=\\\"factForecast\\\",version=\\\"\\\"]}[Data]\\nin\\n    factForecast_\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "factData",
      "lineageTag": "4d5f63d6-1249-4e3e-bf00-329693145aeb",
      "queryGroupId": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "navigationStepName": "Navigation",
      "refreshWhenRefreshingAll": false,
      "text": [
        "let",
        "    Source = Table.Combine({factBirthsDeaths, factCarbonIntensityElectricity, factFreedomOfExpressionIndex, factGDP, factGDPperCapita, factHDI, factMerchandiseExportsGdp, factPopulation, factLifeExpectancy, factExpectedYearsSchooling, factGNI})",
        "in",
        "    Source"
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = PowerPlatform.Dataflows(null),\\n    Workspaces = Source{[Id=\\\"Workspaces\\\"]}[Data],\\n    #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\" = Workspaces{[workspaceId=\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"]}[Data],\\n    #\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\" = #\\\"296b51c5-fe7c-4dee-8cd5-584adc6c5f3a\\\"{[dataflowId=\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\"]}[Data],\\n    factData_ = #\\\"b02f07c5-fa20-4031-bad4-cfad35b11035\\\"{[entity=\\\"factData\\\",version=\\\"\\\"]}[Data]\\nin\\n    factData_\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "_Measures",
      "lineageTag": "094665df-3b7b-40b1-8e37-58373a21a77c",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
        "in",
        "    #\"Removed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\\\"i44FAA==\\\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(Source,{{\\\"Column1\\\", type text}}),\\n    #\\\"Removed Columns\\\" = Table.RemoveColumns(#\\\"Changed Type\\\",{\\\"Column1\\\"})\\nin\\n    #\\\"Removed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "PathToData",
      "lineageTag": "9d288fd6-ffbd-435f-aa9d-319e9a1d33a4",
      "queryGroupId": "872297ae-8489-4690-b34b-de0b00e5c6ef",
      "navigationStepName": "Navigation",
      "text": [
        "\"C:\\Users\\KlausFolz\\Desktop\\GD\\Repositories\\WorldDataReport\\Data\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Text"
    },
    {
      "name": "API Key",
      "lineageTag": "52cace48-003f-4a92-8d7c-f6e5453ff675",
      "queryGroupId": "872297ae-8489-4690-b34b-de0b00e5c6ef",
      "navigationStepName": "Navigation",
      "text": [
        "\"api_key_here\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Text"
    },
    {
      "name": "Switch",
      "lineageTag": "c110ed8b-cf89-4046-b8ff-65d82941dddd",
      "queryGroupId": "872297ae-8489-4690-b34b-de0b00e5c6ef",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    // Created by Daniil Maslyuk",
        "    Switch =",
        "        let",
        "            Function = (input as list) as any =>",
        "                let",
        "                    Source = List.Buffer(input),",
        "                    Expression = List.First(Source),",
        "                    SkipExpression = List.Skip(Source),",
        "                    HasElse = Number.IsEven(List.Count(Source)),",
        "                    ElseValue = if HasElse then List.Last(Source) else null,",
        "                    ValuesResults = List.RemoveLastN(SkipExpression, Number.From(HasElse)),",
        "                    Values = List.Alternate(ValuesResults, 1, 1, 1),",
        "                    Results = List.Alternate(ValuesResults, 1, 1, 0),",
        "                    FirstResult = List.PositionOf(Values, Expression),",
        "                    FunctionResult = if FirstResult = -1 then ElseValue else Results{FirstResult}",
        "                in",
        "                    FunctionResult,",
        "            FunctionType = type function (input as list) as any",
        "                meta [",
        "                    Documentation.Name = \"Switch\",",
        "                    Documentation.LongDescription = \"Evaluates an expression against a list of values and returns one of multiple possible result expressions.\",",
        "                    Documentation.Examples = {",
        "                        [Description = \"Simple Switch expression\", Code = \"Switch({2, 1, \"\"A\"\", 2, \"\"B\"\"})\", Result = \"\"\"B\"\"\"],",
        "                        [Description = \"An equivalent of SWITCH(TRUE... in DAX\", Code = \"Switch({true, 1 > 2, \"\"A\"\", 1 < 2, \"\"B\"\", \"\"No result\"\"})\", Result = \"\"\"B\"\"\"]",
        "                    }",
        "                ],",
        "            TypedFunction = Value.ReplaceType(Function, FunctionType)",
        "        in",
        "            TypedFunction",
        "in",
        "    Switch"
      ],
      "resultType": "Function"
    }
  ],
  "queryGroups": [
    {
      "name": "Dimension Tables",
      "id": "65b26c0a-696f-4291-a301-00e87b035f01",
      "order": 2,
      "description": ""
    },
    {
      "name": "Fact World Data",
      "id": "2f1e849e-c48e-4da3-b41e-56e540a5dfff",
      "order": 3,
      "description": ""
    },
    {
      "name": "Parameters and Functions",
      "id": "872297ae-8489-4690-b34b-de0b00e5c6ef",
      "order": 2,
      "description": ""
    },
    {
      "name": "Fact Weather",
      "id": "70d3ac90-b51c-4cfb-bd18-ba3f1788e92f",
      "order": 3,
      "description": ""
    }
  ],
  "culture": "pt-BR"
}